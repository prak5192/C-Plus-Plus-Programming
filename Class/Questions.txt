================================================================================
► A class prototype is given by

class X
{
    public:
        // Define public data members 
        // Define public functions
    protected:
        // Define protected data members 
        // Define protected functions
    public:
        // Define private data members 
        // Define private functions
};


Note: 
1. The members of a class declared with the keyword class are private 
   by default. A class is inherited privately by default.
2. The members of a class declared with the keyword struct are public 
   by default. A structure is inherited publicly by default.
3. The members of a union (declared with the keyword union) are public 
   by default. A union cannot be used as a base class in derivation.


Difference between Private and protected data types:
=========================================================
1. A member (either data member or member function) declared in a private 
   section of a class can only be accessed by member functions and friends 
   of that class
2. A member (either data member or member function) declared in a 
   protected section of a class can only be accessed by member functions 
   and friends of that class, and by member functions and friends of  
   derived classes
3. A member (either data member or member function) declared in a public 
   section of a class can be accessed by anyone

What is encapsulation in C++? 
==============================
1. Preventing unauthorized access to some piece of information or  
   functionality. 
2. Designing a clean interface and separating that interface from its 
   implementation merely allows users to use the interface. But encapsulating
   (putting "in a capsule") the implementation forces users to use the 
   interface.
================================================================================
►
